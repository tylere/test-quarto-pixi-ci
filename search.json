[
  {
    "objectID": "tutorials/tutorial_2/index.html",
    "href": "tutorials/tutorial_2/index.html",
    "title": "Test Quarto Pixi CI w/ Envs",
    "section": "",
    "text": "import sys\n\nprint(f'{sys.version=}')\n\nsys.version='3.12.0 | packaged by conda-forge | (main, Oct  3 2023, 08:50:24) [GCC 12.3.0]'\n\n\n\nfrom datetime import datetime\n\ncurrent_time = datetime.now()\nprint(f'Current time: {current_time}')\n\nCurrent time: 2025-03-07 21:51:58.344035\n\n\n\nimport shapely\n\n\nimport xkcd\n\n\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[4], line 1\n----&gt; 1 import xkcd\n\nModuleNotFoundError: No module named 'xkcd'"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Test Quarto Pixi CI w/ Multiple Environments",
    "section": "",
    "text": "This repository demonstrates how to create a website of coding tutorials. - The website is static and is built by the Quarto publishing system. - Website updates are triggered by GitHub Actions. - Static files are hosted on GitHub pages. - Each tutorial has a separate coding environment, allowing the use of different versions of libraries (or even different languages). Versioned libraries are defined by a configuration file within the tutorial folder (example for tutorial 1, example for tutorial 2). - To execute code within the tutorials, users can either: 1. Download the notebook, and install dependencies in a local environment. 2. Launch an online execution environment (GitHub Codespace) the configures the coding environment."
  },
  {
    "objectID": "tutorials/tutorial_1/index.html",
    "href": "tutorials/tutorial_1/index.html",
    "title": "Test Quarto Pixi CI w/ Envs",
    "section": "",
    "text": "import sys\n\nprint(f'{sys.version=}')\n\nsys.version='3.11.0 | packaged by conda-forge | (main, Jan 14 2023, 05:01:18) [GCC 11.3.0]'\n\n\n\nfrom datetime import datetime\n\ncurrent_time = datetime.now()\nprint(f'Current time: {current_time}')\n\nCurrent time: 2025-03-07 21:51:18.873072\n\n\n\nimport xkcd\n\n\nimport shapely\n\n\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[4], line 1\n----&gt; 1 import shapely\n\nModuleNotFoundError: No module named 'shapely'"
  }
]