// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
{
	"name": "Tutorial 1 Container",
	// "build": {
	// 	// Sets the run context to one level up instead of the .devcontainer folder.
	// 	"context": "..",
	// 	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// 	"dockerfile": "Dockerfile"
	// },
	"dockerComposeFile": ["../../docker-compose.yml", "docker-compose.codespaces.yml"],
	"service": "tutorial-1-service",
  "shutdownAction": "none",
  "workspaceFolder": "/workspace/tutorials/tutorial_1",

	// Features to add to the dev container. More info: https://containers.dev/features.
  // "features": {
  //   "ghcr.io/devcontainers/features/python:1": {
  //     "version": "3.11",
  //     "installJupyterlab": true
  //   }
  // },

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	
	// Working but verbose...
	"postCreateCommand": "curl -fsSL https://pixi.sh/install.sh | bash && /home/vscode/.pixi/bin/pixi add ipykernel && /home/vscode/.pixi/bin/pixi install && /home/vscode/.pixi/bin/pixi info && /home/vscode/.pixi/bin/pixi run python -m ipykernel install --user --name=devcontainer --display-name 'Python (Dev Container)'",

	// Can't figure out how to run a script from the container.  I tried the following:
	//"postCreateCommand": "./tutorial_1_container/postCreateCommand.sh",

	// Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": ["ms-python.python", "ms-toolsai.jupyter"]
    }
  }

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
}

